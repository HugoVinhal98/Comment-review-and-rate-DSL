<#@ template inherits="Microsoft.VisualStudio.TextTemplating.VSHost.ModelingTextTransformation" language="Java" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".java" #>
<#@ gorgeous processor="gorgeousDirectiveProcessor" requires="fileName='Sample.gorgeous'" #>

package ui;

import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

import model.GorgeousSandwich;
import model.<#=this.Model.Comment[0].Name#>;
import model.<#=this.Model.Subject[0].Name#>;
import model.<#=this.Model.Review[0].Name#>;
import model.<#=this.Model.ReviewComment[0].Name#>;

public class ModelExecution {

	public static Scanner in = new Scanner(System.in);
	public static GorgeousSandwich gorgeousSandwichAux;

	public static void execute(GorgeousSandwich gorgeousSandwich) {
		gorgeousSandwichAux = gorgeousSandwich;
		boolean exit = false;
		while (!exit) {
			System.out.println("#####UI#####");
			System.out.println("Please select <#=this.Model.Subject[0].Name#>:");

			System.out.println("0- Exit");
			List<<#=this.Model.Subject[0].Name#>> listSandwich = gorgeousSandwichAux.getSandwichList();
			int temp = 1;
			for (<#=this.Model.Subject[0].Name#> sandwich : listSandwich) {
				System.out.println(temp + "-" + sandwich.getNome());
				temp++;
			}
			int num = in.nextInt();

			switch (num) {
			case 0:
				exit = true;
				break;
			default: {
				mostrarSandwich(num - 1);
				break;
			}
			}
		}

	}

	public static void mostrarSandwich(int num1) {
		<#=this.Model.Subject[0].Name#> sandwichTela = gorgeousSandwichAux.getSandwichList().get(num1);
		System.out.println("Nome:" + sandwichTela.getNome());
		System.out.println("Tipo:" + sandwichTela.getTipo());
		System.out.println("Preco:" + sandwichTela.getPreco());
		System.out.println("Descricao:" + sandwichTela.getDescricao());
		System.out.println("Imagem:" + sandwichTela.getImagem());
		System.out.println("");
		boolean exit = false;
		while (!exit) {
			System.out.println("Please select option:");
			System.out.println("0- Exit");
			System.out.println("1- <#=this.Model.Review[0].Name#>");
			System.out.println("2- <#=this.Model.Comment[0].Name#>");
			int num = in.nextInt();

			switch (num) {
			case 0:
				exit = true;
				break;
			case 1:
				mostrarReview(sandwichTela);
				break;
			case 2:
				mostrarComment(sandwichTela);
				break;
			}

		}
	}

	public static void mostrarReview(<#=this.Model.Subject[0].Name#> sandwichTela) {
		List<<#=this.Model.ReviewComment[0].Name#>> reviewCommentTela = sandwichTela.getReviewsComments();
		List<<#=this.Model.Review[0].Name#>> reviewTela = new ArrayList<<#=this.Model.Review[0].Name#>>();
		for (<#=this.Model.ReviewComment[0].Name#> test : reviewCommentTela) {
			if (test.getClass() == <#=this.Model.Review[0].Name#>.class) {
				reviewTela.add((<#=this.Model.Review[0].Name#>) test);
			}
		}

		System.out.println("#####UI#####");
		boolean exit = false;
		while (!exit) {
			int temp = 1;
			System.out.println("Please select <#=this.Model.Review[0].Name#>:");
			System.out.println("0- Exit");
			for (<#=this.Model.Review[0].Name#> review : reviewTela) {
				System.out.println(temp + "-" + review.getTexto());
				temp++;
			}
			System.out.println("");
			int num = in.nextInt();

			switch (num) {
			case 0:
				exit = true;
				break;
			default:
				break;
			}

		}
	}

	public static void mostrarReviewDetalhada(<#=this.Model.Review[0].Name#> review) {
		System.out.println("Titulo:" + review.getTexto());
		System.out.println("Texto:" + review.getTexto());
		System.out.println("Maximo:" + review.getMaxInterval());
		System.out.println("Minimo:" + review.getMinInterval());
		System.out.println("Grade:" + review.getGrade());
		System.out.println("");

	}

	public static void mostrarComment(<#=this.Model.Subject[0].Name#> sandwichTela) {
		List<<#=this.Model.ReviewComment[0].Name#>> reviewCommentTela = sandwichTela.getReviewsComments();
		List<<#=this.Model.Comment[0].Name#>> commentTela = new ArrayList<<#=this.Model.Comment[0].Name#>>();
		for (<#=this.Model.ReviewComment[0].Name#> test : reviewCommentTela) {
			if (test.getClass() == <#=this.Model.Comment[0].Name#>.class) {
				commentTela.add((<#=this.Model.Comment[0].Name#>) test);
			}
		}

		System.out.println("#####UI#####");
		boolean exit = false;
		while (!exit) {
			int temp = 1;
			System.out.println("Please select <#=this.Model.Comment[0].Name#>:");
			System.out.println("0- Exit");
			for (<#=this.Model.Comment[0].Name#> comment : commentTela) {
				System.out.println(temp + "-" + comment.getTexto());
				temp++;
			}
			System.out.println("");
			int num = in.nextInt();

			switch (num) {
			case 0:
				exit = true;
				break;
			default:
				mostrarCommentDetalhado(commentTela.get(num - 1));
				break;
			}

		}
	}

	public static void mostrarCommentDetalhado(<#=this.Model.Comment[0].Name#> comment) {
		System.out.println("Texto:" + comment.getTexto());
		System.out.println("Has Reply:" + comment.getHasReply());
		System.out.println("Utilizador:" + comment.getUser().getNome());
		System.out.println("");
		System.out.println("#####UI#####");
		boolean exit = false;
		while (!exit) {
			int temp = 1;
			System.out.println("Please select Process:");
			System.out.println("0- Exit");

			System.out.println("");
			int num = in.nextInt();

			switch (num) {
			case 0:
				exit = true;
				break;
			default:
				break;
			}
		}
	}

}